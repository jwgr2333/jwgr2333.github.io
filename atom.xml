<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>X-后花园</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-09-10T12:57:29.470Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>XX</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>STM32</title>
    <link href="http://example.com/2020/09/10/STM32/"/>
    <id>http://example.com/2020/09/10/STM32/</id>
    <published>2020-09-10T12:37:44.000Z</published>
    <updated>2020-09-10T12:57:29.470Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/09/10/STM32/stm32.jpg" alt="image" style="zoom:25%;"><h2 id="测控"><a href="#测控" class="headerlink" title="测控"></a>测控</h2><ul><li>被调剂到测控属实不行，啥都不会，发不了论文，学的前端也毫无作用。导师最后还是让我学习测控需要掌握的知识。</li><li>stm32</li><li>plc</li></ul><h2 id="STM32-寄存器"><a href="#STM32-寄存器" class="headerlink" title="STM32 寄存器"></a>STM32 寄存器</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/2020/09/10/STM32/stm32.jpg&quot; alt=&quot;image&quot; style=&quot;zoom:25%;&quot;&gt;

&lt;h2 id=&quot;测控&quot;&gt;&lt;a href=&quot;#测控&quot; class=&quot;headerlink&quot; title=&quot;测控&quot;&gt;&lt;/a&gt;测控&lt;/h2&gt;&lt;u</summary>
      
    
    
    
    
    <category term="stm32" scheme="http://example.com/tags/stm32/"/>
    
  </entry>
  
  <entry>
    <title>吐槽200910</title>
    <link href="http://example.com/2020/09/10/%E5%90%90%E6%A7%BD200910/"/>
    <id>http://example.com/2020/09/10/%E5%90%90%E6%A7%BD200910/</id>
    <published>2020-09-10T02:07:35.000Z</published>
    <updated>2020-09-10T12:44:18.066Z</updated>
    
    <content type="html"><![CDATA[<h5 id="吐槽黄色衣服的小哥"><a href="#吐槽黄色衣服的小哥" class="headerlink" title="吐槽黄色衣服的小哥"></a>吐槽黄色衣服的小哥</h5><ul><li><p>刚进门就一个劲的推荐办卡</p></li><li><p>在解释自己已经有卡之后，沉浸了一段时间。</p></li><li><p>小哥发现头发侧面有点翘起来，让我去把这部分的头发做一下。（可能是因为头发长睡觉睡的）。我提出今天没时间，下次吧（委婉拒绝），小哥不依不饶，多次提出可以预约。我的耐心已经被消耗殆尽了。o(一︿一+)o！！最终忍无可忍直接拒绝。小哥甚至在拒绝后还是在絮絮叨叨。</p></li><li><p>下次还是选择其他的师傅吧，(⊙﹏⊙)。</p></li><li><p>想安安静静的剪个头发怎么这么难呢~</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;吐槽黄色衣服的小哥&quot;&gt;&lt;a href=&quot;#吐槽黄色衣服的小哥&quot; class=&quot;headerlink&quot; title=&quot;吐槽黄色衣服的小哥&quot;&gt;&lt;/a&gt;吐槽黄色衣服的小哥&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;刚进门就一个劲的推荐办卡&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在解释</summary>
      
    
    
    
    <category term="吐槽" scheme="http://example.com/categories/%E5%90%90%E6%A7%BD/"/>
    
    
    <category term="理发店" scheme="http://example.com/tags/%E7%90%86%E5%8F%91%E5%BA%97/"/>
    
  </entry>
  
  <entry>
    <title>categories</title>
    <link href="http://example.com/2020/09/08/categories/"/>
    <id>http://example.com/2020/09/08/categories/</id>
    <published>2020-09-08T08:50:43.000Z</published>
    <updated>2020-09-08T08:51:52.351Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>first article</title>
    <link href="http://example.com/2020/09/08/first-article/"/>
    <id>http://example.com/2020/09/08/first-article/</id>
    <published>2020-09-08T04:30:55.000Z</published>
    <updated>2020-09-09T12:19:03.507Z</updated>
    
    <content type="html"><![CDATA[<h2 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h2><p>全局安装hexo-cli，注意，是基于node的。需要安装node.js。安装完成检验一下npm -v , node -v。如果没问题，可以npm i -g hexo-cli全局安装了。当然也可以使用淘宝镜像。安装完成后就可以进入下一步了</p><h2 id="下一步"><a href="#下一步" class="headerlink" title="下一步"></a>下一步</h2><p>创建一个blog文件夹并进入，当然，起名可以无所谓。使用hexo init 初始化。等待完成后，hexo s 启动服务。这样你就拥有了一个最初的模板了。</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>显然，我们不可能只在本地使用，那就直接搞md算了，何必用hexo。为了把我们的博客部署到github上，我们需要在主目录下 npm i -S hexo-deployer-git 安装这个插件帮助我们。接下来，修改一下主目录的_config.yml文件的deploy属性如图</p><p><img src="https://jwgr2333.github.io/imgs/image-20200908201329857.png" alt="image-20200908201329857"></p><p>注意空格，同时在github需要创建一个仓库，取名一定是username.github.io  参照我的。随后使用命令，</p><p>hexo clean,hexo g, hexo d 就完成了往github的上传。这时，在浏览器输入 <a href="https://username.github.io/">https://username.github.io</a> 就可以看到啦。</p><p><font color="red">此外，有一些配置也是可以改的，比如title, languages, 等 如果是部署到个人的云服务器上的话可能需要修改URL，我是在github上所以可以暂时不用改</font></p><h2 id="主题theme"><a href="#主题theme" class="headerlink" title="主题theme"></a>主题theme</h2><p>当我们在完成以上的操作后，我们就拥有的自己的一个博客。但是这个博客的功能还是比较简陋的，为了方便，我们可以借用他人开源的一些基于hexo的主题帮助我们更好的装饰我们的博客。这里我使用的是butterfly。</p><p>github地址: <a href="https://github.com/jerryc127/hexo-theme-butterfly">https://github.com/jerryc127/hexo-theme-butterfly</a>  没事去点个star吧，确实好用~</p><ul><li><p>安装</p><p>安装也比较简单，在主文件夹克隆一下butterfly到themes目录下的butterfly文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https:&#x2F;&#x2F;github.com&#x2F;jerryc127&#x2F;hexo-theme-butterfly.git themes&#x2F;butterfly</span><br></pre></td></tr></table></figure></li><li><p>配置</p><p>修改主目录下的_config.yml文件的theme属性为butterfly，如图_。理论上其他主题可能也可以这样改。当然我只是猜测~</p><p><img src="https://jwgr2333.github.io/imgs/image-20200908202410942.png" alt="image-20200908202410942"></p><p>如果没有pug &amp; stylus renderer,作者也说了，需要这个.那我们就可以安装一下，因为已经安装了node，所以只需要在命令行操作即可    </p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus</span><br></pre></td></tr></table></figure><ul><li><p>测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean, hexo g, hexo s &#x2F;&#x2F;看看效果</span><br></pre></td></tr></table></figure><p>理论上已经可以看到自己的博客啦，如果对这个主题不太满意，可以去看看别的主题。总有一款适合你~</p></li></ul><h2 id="功能完善"><a href="#功能完善" class="headerlink" title="功能完善"></a>功能完善</h2><p>做完前面的工作之后，发现可能还是不能满足我的要求，着实有点素。于是我开始了个性化定制~ 这个时候就遇到了一些困难。可能版本不同，网络上先行者的建议与我的还是有点出入。于是，我开始自己查看目录。在butterfly的source目录下出现了_config.yml配置文件。这个文件可能是与主目录下的_config.yml文件合并或覆盖的。因此，修改此文件应该可以解决我们的问题。</p><ul><li><p>menu</p><p>刚打开时menu是被注释掉的，显然，menu还是需要的，我们取消注释并稍微修改一下，注意！！我们修改的时候可以 hexo s 把项目运行起来，这样我们能及时补救错误</p><p><img src="https://jwgr2333.github.io/imgs/image-20200908204113865.png" alt="image-20200908204113865"></p></li><li><p>Image设置</p><p>图片在代码中都有详细的提示，这里我就不过多说了，是选择删掉原图替换还是找网图都是可以的</p></li></ul><p><img src="https://jwgr2333.github.io/imgs/image-20200908205136691.png" alt="image-20200908205136691"></p><ul><li><p>categories、tags功能的实现</p><p>在我们把menu搞定之后，虽然出现了一排menu，可是我们却点击不了。这是因为我们还没有这个页面呀，我们可以通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &lt;pagename&gt;</span><br></pre></td></tr></table></figure><p>创建页面，如 hexo new page tags。以此类推我们可以创建categories， messageboard等。创建出来后我们是可以不用管创建出的文件的。我们需要做的是在新建的hexo new ‘new article’中把tags、categories写上即可。</p><p><img src="https://jwgr2333.github.io/imgs/image-20200908210251643.png" alt="image-20200908210251643"></p></li></ul><ul><li><p>comment功能的实现，要实现评论功能，我们这里借助的是Valine，需要</p><ul><li><p>注册<a href="https://leancloud.cn/dashboard/login.html#/signin">LeanCloud</a></p></li><li><p>创建应用：选择开发板即可。创建完成后进入应用keys，复制AppId、AppKey。粘贴到</p><p><img src="https://jwgr2333.github.io/imgs/image-20200908211005945.png" alt="image-20200908211005945"></p><p>注意，在这一行需要把comments下的Valine加上，当然你也可以用其他的。这里就相应的修改</p><p><img src="https://jwgr2333.github.io/imgs/image-20200908211034230.png" alt="image-20200908211034230"></p></li></ul></li></ul><p>然后还有字数统计、特效等功能，只要你想开都是可以的。因为作者是香港人，所以有中文提示，按照提示来就完事了。</p><p><font color="red">在设置评论时，同时发现了一个问题，即不只是在messageboard下有评论框，在categories、tags下面都有。只需要在创建的index页面下加入这个即可</font></p><pre><code>comments: false</code></pre><p><img src="https://jwgr2333.github.io/imgs/image-20200909200350809.png" alt="image"></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>暂时就写到这里吧，还有东西是我没有完善的。比如友链、music、videos、线上管理等。日后有时间可以继续完善吧~ 今天先做到这里。不得不说，hexo是一个非常优秀的博客框架。采用Markdown简直不要太方便。对我来说友好度爆棚。。而且用户庞大，意味着可以踩着前人的肩膀上前进。非常感谢先驱者的付出.</p><h2 id="BUG"><a href="#BUG" class="headerlink" title="BUG"></a>BUG</h2><p>本地图片显示不出来，改用相对路径也无法显示。（个人采用的是把本地的图片复制到imgs文件夹中一起上传到后台，然后通过github下的链接引用，如：<a href="https://jwgr2333.github.io/imgs/image-20200908211034230.png%EF%BC%89%E3%80%82%E8%BF%99%E6%A0%B7%E5%B0%B1%E4%B8%8D%E4%BC%9A%E6%9C%89%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98%E4%BA%86%E3%80%82">https://jwgr2333.github.io/imgs/image-20200908211034230.png）。这样就不会有图片显示的问题了。</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>作者：<a href="https://github.com/jerryc127">jerryc127</a>，github链接：<a href="https://github.com/jerryc127/hexo-theme-butterfly">https://github.com/jerryc127/hexo-theme-butterfly</a><br>作者：<a href="https://me.csdn.net/weixin_43350051">XJHui’s Blog</a>，文章链接：<a href="https://blog.csdn.net/weixin_43350051/article/details/104923503">https://blog.csdn.net/weixin_43350051/article/details/104923503</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;首先&quot;&gt;&lt;a href=&quot;#首先&quot; class=&quot;headerlink&quot; title=&quot;首先&quot;&gt;&lt;/a&gt;首先&lt;/h2&gt;&lt;p&gt;全局安装hexo-cli，注意，是基于node的。需要安装node.js。安装完成检验一下npm -v , node -v。如果没问题，可以</summary>
      
    
    
    
    <category term="blog build" scheme="http://example.com/categories/blog-build/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/09/08/hello-world/"/>
    <id>http://example.com/2020/09/08/hello-world/</id>
    <published>2020-09-08T04:29:10.730Z</published>
    <updated>2020-09-08T04:29:10.731Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
